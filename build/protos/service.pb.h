// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos/service.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protos_2fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_protos_2fservice_2eproto;
class SMAReply;
struct SMAReplyDefaultTypeInternal;
extern SMAReplyDefaultTypeInternal _SMAReply_default_instance_;
class SMARequest;
struct SMARequestDefaultTypeInternal;
extern SMARequestDefaultTypeInternal _SMARequest_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class SMARequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SMARequest) */ {
 public:
  inline SMARequest() : SMARequest(nullptr) {}
  ~SMARequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SMARequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SMARequest(const SMARequest& from) : SMARequest(nullptr, from) {}
  inline SMARequest(SMARequest&& from) noexcept
      : SMARequest(nullptr, std::move(from)) {}
  inline SMARequest& operator=(const SMARequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SMARequest& operator=(SMARequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SMARequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SMARequest* internal_default_instance() {
    return reinterpret_cast<const SMARequest*>(
        &_SMARequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SMARequest& a, SMARequest& b) { a.Swap(&b); }
  inline void Swap(SMARequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SMARequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SMARequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SMARequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SMARequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SMARequest& from) { SMARequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SMARequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "SMARequest"; }

 protected:
  explicit SMARequest(::google::protobuf::Arena* arena);
  SMARequest(::google::protobuf::Arena* arena, const SMARequest& from);
  SMARequest(::google::protobuf::Arena* arena, SMARequest&& from) noexcept
      : SMARequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStockSymbolFieldNumber = 1,
    kTickerSizeFieldNumber = 2,
    kSMAShortFieldNumber = 3,
    kSMALongFieldNumber = 4,
  };
  // optional string StockSymbol = 1;
  bool has_stocksymbol() const;
  void clear_stocksymbol() ;
  const std::string& stocksymbol() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_stocksymbol(Arg_&& arg, Args_... args);
  std::string* mutable_stocksymbol();
  PROTOBUF_NODISCARD std::string* release_stocksymbol();
  void set_allocated_stocksymbol(std::string* value);

  private:
  const std::string& _internal_stocksymbol() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stocksymbol(
      const std::string& value);
  std::string* _internal_mutable_stocksymbol();

  public:
  // int32 tickerSize = 2;
  void clear_tickersize() ;
  ::int32_t tickersize() const;
  void set_tickersize(::int32_t value);

  private:
  ::int32_t _internal_tickersize() const;
  void _internal_set_tickersize(::int32_t value);

  public:
  // int32 SMAShort = 3;
  void clear_smashort() ;
  ::int32_t smashort() const;
  void set_smashort(::int32_t value);

  private:
  ::int32_t _internal_smashort() const;
  void _internal_set_smashort(::int32_t value);

  public:
  // int32 SMALong = 4;
  void clear_smalong() ;
  ::int32_t smalong() const;
  void set_smalong(::int32_t value);

  private:
  ::int32_t _internal_smalong() const;
  void _internal_set_smalong(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:SMARequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      30, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SMARequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SMARequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr stocksymbol_;
    ::int32_t tickersize_;
    ::int32_t smashort_;
    ::int32_t smalong_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fservice_2eproto;
};
// -------------------------------------------------------------------

class SMAReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SMAReply) */ {
 public:
  inline SMAReply() : SMAReply(nullptr) {}
  ~SMAReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SMAReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline SMAReply(const SMAReply& from) : SMAReply(nullptr, from) {}
  inline SMAReply(SMAReply&& from) noexcept
      : SMAReply(nullptr, std::move(from)) {}
  inline SMAReply& operator=(const SMAReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline SMAReply& operator=(SMAReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SMAReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const SMAReply* internal_default_instance() {
    return reinterpret_cast<const SMAReply*>(
        &_SMAReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SMAReply& a, SMAReply& b) { a.Swap(&b); }
  inline void Swap(SMAReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SMAReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SMAReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SMAReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SMAReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SMAReply& from) { SMAReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SMAReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "SMAReply"; }

 protected:
  explicit SMAReply(::google::protobuf::Arena* arena);
  SMAReply(::google::protobuf::Arena* arena, const SMAReply& from);
  SMAReply(::google::protobuf::Arena* arena, SMAReply&& from) noexcept
      : SMAReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNumFieldNumber = 1,
  };
  // int32 num = 1;
  void clear_num() ;
  ::int32_t num() const;
  void set_num(::int32_t value);

  private:
  ::int32_t _internal_num() const;
  void _internal_set_num(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:SMAReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SMAReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SMAReply& from_msg);
    ::int32_t num_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SMARequest

// optional string StockSymbol = 1;
inline bool SMARequest::has_stocksymbol() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SMARequest::clear_stocksymbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stocksymbol_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SMARequest::stocksymbol() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SMARequest.StockSymbol)
  return _internal_stocksymbol();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SMARequest::set_stocksymbol(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.stocksymbol_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:SMARequest.StockSymbol)
}
inline std::string* SMARequest::mutable_stocksymbol() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_stocksymbol();
  // @@protoc_insertion_point(field_mutable:SMARequest.StockSymbol)
  return _s;
}
inline const std::string& SMARequest::_internal_stocksymbol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stocksymbol_.Get();
}
inline void SMARequest::_internal_set_stocksymbol(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.stocksymbol_.Set(value, GetArena());
}
inline std::string* SMARequest::_internal_mutable_stocksymbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.stocksymbol_.Mutable( GetArena());
}
inline std::string* SMARequest::release_stocksymbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:SMARequest.StockSymbol)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.stocksymbol_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.stocksymbol_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void SMARequest::set_allocated_stocksymbol(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.stocksymbol_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.stocksymbol_.IsDefault()) {
          _impl_.stocksymbol_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:SMARequest.StockSymbol)
}

// int32 tickerSize = 2;
inline void SMARequest::clear_tickersize() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tickersize_ = 0;
}
inline ::int32_t SMARequest::tickersize() const {
  // @@protoc_insertion_point(field_get:SMARequest.tickerSize)
  return _internal_tickersize();
}
inline void SMARequest::set_tickersize(::int32_t value) {
  _internal_set_tickersize(value);
  // @@protoc_insertion_point(field_set:SMARequest.tickerSize)
}
inline ::int32_t SMARequest::_internal_tickersize() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tickersize_;
}
inline void SMARequest::_internal_set_tickersize(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tickersize_ = value;
}

// int32 SMAShort = 3;
inline void SMARequest::clear_smashort() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.smashort_ = 0;
}
inline ::int32_t SMARequest::smashort() const {
  // @@protoc_insertion_point(field_get:SMARequest.SMAShort)
  return _internal_smashort();
}
inline void SMARequest::set_smashort(::int32_t value) {
  _internal_set_smashort(value);
  // @@protoc_insertion_point(field_set:SMARequest.SMAShort)
}
inline ::int32_t SMARequest::_internal_smashort() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.smashort_;
}
inline void SMARequest::_internal_set_smashort(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.smashort_ = value;
}

// int32 SMALong = 4;
inline void SMARequest::clear_smalong() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.smalong_ = 0;
}
inline ::int32_t SMARequest::smalong() const {
  // @@protoc_insertion_point(field_get:SMARequest.SMALong)
  return _internal_smalong();
}
inline void SMARequest::set_smalong(::int32_t value) {
  _internal_set_smalong(value);
  // @@protoc_insertion_point(field_set:SMARequest.SMALong)
}
inline ::int32_t SMARequest::_internal_smalong() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.smalong_;
}
inline void SMARequest::_internal_set_smalong(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.smalong_ = value;
}

// -------------------------------------------------------------------

// SMAReply

// int32 num = 1;
inline void SMAReply::clear_num() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_ = 0;
}
inline ::int32_t SMAReply::num() const {
  // @@protoc_insertion_point(field_get:SMAReply.num)
  return _internal_num();
}
inline void SMAReply::set_num(::int32_t value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:SMAReply.num)
}
inline ::int32_t SMAReply::_internal_num() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_;
}
inline void SMAReply::_internal_set_num(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_protos_2fservice_2eproto_2epb_2eh
